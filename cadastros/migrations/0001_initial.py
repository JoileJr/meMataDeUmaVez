# Generated by Django 5.2.3 on 2025-07-14 14:47

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Barbearia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_fantasia', models.CharField(help_text='Nome fantasia da barbearia', max_length=255)),
                ('razao_social', models.CharField(help_text='Razão social da barbearia', max_length=255)),
                ('cnpj', models.CharField(help_text='CNPJ da barbearia', max_length=18)),
                ('telefone', models.CharField(help_text='Telefone de contato da barbearia', max_length=20)),
                ('email', models.EmailField(help_text='E-mail da barbearia', max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do cliente', max_length=255)),
                ('telefone', models.CharField(help_text='Telefone do cliente', max_length=20)),
                ('email', models.EmailField(help_text='E-mail do cliente', max_length=254)),
                ('data_nascimento', models.DateField(help_text='Data de nascimento do cliente')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data de cadastro do cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rua', models.CharField(help_text='Nome da rua do endereço', max_length=255)),
                ('numero', models.CharField(help_text='Número do endereço', max_length=20)),
                ('complemento', models.CharField(blank=True, help_text='Complemento do endereço (opcional)', max_length=255, null=True)),
                ('bairro', models.CharField(help_text='Bairro do endereço', max_length=100)),
                ('cidade', models.CharField(help_text='Cidade do endereço', max_length=100)),
                ('estado', models.CharField(help_text='UF do estado (ex: SP, RJ)', max_length=2)),
                ('cep', models.CharField(help_text='CEP do endereço', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do administrador', max_length=255)),
                ('email', models.EmailField(help_text='E-mail do administrador', max_length=254)),
                ('telefone', models.CharField(help_text='Telefone do administrador', max_length=20)),
                ('cargo', models.CharField(help_text='Cargo do administrador', max_length=100)),
                ('barbearia', models.ForeignKey(help_text='Barbearia gerenciada', on_delete=django.db.models.deletion.CASCADE, related_name='administradores', to='cadastros.barbearia')),
            ],
        ),
        migrations.CreateModel(
            name='Barbeiro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do barbeiro', max_length=255)),
                ('telefone', models.CharField(help_text='Telefone do barbeiro', max_length=20)),
                ('especialidade', models.CharField(help_text='Especialidade do barbeiro', max_length=100)),
                ('ativo', models.BooleanField(default=True, help_text='Indica se o barbeiro está ativo')),
                ('barbearia', models.ForeignKey(help_text='Barbearia onde trabalha', on_delete=django.db.models.deletion.CASCADE, related_name='barbeiros', to='cadastros.barbearia')),
            ],
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora', models.DateTimeField(help_text='Data e hora do agendamento')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('confirmado', 'Confirmado'), ('cancelado', 'Cancelado'), ('concluido', 'Concluído')], default='pendente', help_text='Status do agendamento', max_length=20)),
                ('observacoes', models.TextField(blank=True, help_text='Observações do agendamento (opcional)', null=True)),
                ('barbearia', models.ForeignKey(help_text='Barbearia do agendamento', on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='cadastros.barbearia')),
                ('barbeiro', models.ForeignKey(help_text='Barbeiro responsável', on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='cadastros.barbeiro')),
                ('cliente', models.ForeignKey(help_text='Cliente do agendamento', on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='cadastros.cliente')),
            ],
        ),
        migrations.AddField(
            model_name='barbearia',
            name='endereco',
            field=models.OneToOneField(help_text='Endereço da barbearia', on_delete=django.db.models.deletion.CASCADE, related_name='barbearia', to='cadastros.endereco'),
        ),
        migrations.CreateModel(
            name='Pagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, help_text='Valor do pagamento', max_digits=8)),
                ('metodo', models.CharField(help_text='Método de pagamento', max_length=50)),
                ('data_hora', models.DateTimeField(help_text='Data e hora do pagamento')),
                ('agendamento', models.OneToOneField(blank=True, help_text='Agendamento relacionado (opcional)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pagamento', to='cadastros.agendamento')),
            ],
        ),
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do serviço', max_length=255)),
                ('descricao', models.TextField(help_text='Descrição do serviço')),
                ('preco', models.DecimalField(decimal_places=2, help_text='Preço do serviço', max_digits=8)),
                ('duracao_minutos', models.PositiveIntegerField(help_text='Duração do serviço em minutos')),
                ('barbearia', models.ForeignKey(help_text='Barbearia que oferece o serviço', on_delete=django.db.models.deletion.CASCADE, related_name='servicos', to='cadastros.barbearia')),
            ],
        ),
        migrations.AddField(
            model_name='agendamento',
            name='servico',
            field=models.ForeignKey(help_text='Serviço agendado', on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='cadastros.servico'),
        ),
    ]
